package com.turpgames.physics;

import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.Box2DDebugRenderer;
import com.badlogic.gdx.physics.box2d.World;

public final class GameWorld {
	private final static float step = 1 / 60f;
	private final static int velocityIterations = 6;
	private final static int positionIterations = 2;

	private final SpriteBatch spriteBatch;
	private final World world;
	private final OrthographicCamera camera;
	private final Box2DDebugRenderer debugRenderer;

	private GameWorld(Builder builder) {
		this.world = builder.world;
		this.camera = builder.camera;
		this.spriteBatch = new SpriteBatch();
		this.debugRenderer = new Box2DDebugRenderer(true, true, true, true, true, true);
		
		camera.position.set(camera.viewportWidth * .5f, camera.viewportHeight * .5f, 0f);  
	}
	
	public Body createBody(BodyDef bodyDef) {
		return world.createBody(bodyDef);
	}

	public void update() {
		camera.update();
		spriteBatch.setProjectionMatrix(camera.combined);
	}

	public void render() {
		spriteBatch.begin();
		spriteBatch.end();
		debugRenderer.render(world, camera.combined);
		world.step(step, velocityIterations, positionIterations);
	}

	public void dispose() {
		spriteBatch.dispose();
	}

	public static Builder buildWith() {
		return new Builder();
	}

	public static class Builder {
		private World world;
		private OrthographicCamera camera;

		private Builder() {

		}

		public Builder gravity(float vx, float vy) {
			this.world = new World(new Vector2(vx, vy), true);
			return this;
		}

		public Builder viewport(float viewportWidth, float viewportHeight) {
			this.camera = new OrthographicCamera(viewportWidth, viewportHeight);
			return this;
		}

		public GameWorld build() {
			return new GameWorld(this);
		}
	}
}
