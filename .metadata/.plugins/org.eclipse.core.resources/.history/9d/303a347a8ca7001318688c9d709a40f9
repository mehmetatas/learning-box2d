package com.turpgames.physics;

import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.PolygonShape;
import com.turpgames.physics.body.builders.BodyBuilder;
import com.turpgames.physics.body.builders.FixtureBuilder;
import com.turpgames.physics.body.builders.PolygonShapeBuilder;

public final class Room {
	private Room(GameWorld gameWorld, Builder builder) {
		createFloorAndCeiling(gameWorld, builder);
		createSideWalls(gameWorld, builder);
	}

	private void createFloorAndCeiling(GameWorld gameWorld, Builder builder) {
		Body floorBody = BodyBuilder.newStaticBody()
				.center(builder.width / 2, builder.wallThickness / 2)
				.build(gameWorld.getWorld());

		Body ceilingBody = BodyBuilder.newStaticBody()
				.center(builder.width / 2, builder.height - builder.wallThickness / 2)
				.build(gameWorld.getWorld());

		PolygonShape box = PolygonShapeBuilder.buildBox(builder.height, builder.wallThickness, builder.position.x, builder.position.y);

		FixtureBuilder.newFixture()
				.shape(box)
				.density(0f)
				.build(floorBody);

		FixtureBuilder.newFixture()
				.shape(box)
				.density(0f)
				.build(ceilingBody);

		box.dispose();
	}

	private void createSideWalls(GameWorld gameWorld, Builder builder) {
		Body leftWallBody = BodyBuilder.newStaticBody()
				.center(builder.wallThickness / 2, gameWorld.getHeight() / 2)
				.build(gameWorld.getWorld());
		
		Body rightWallBody = BodyBuilder.newStaticBody()
				.center(gameWorld.getWidth() - builder.wallThickness / 2, gameWorld.getHeight() / 2)
				.build(gameWorld.getWorld());

		PolygonShape box = PolygonShapeBuilder.buildBox(builder.wallThickness, gameWorld.getHeight(),3,3 );

		FixtureBuilder.newFixture()
				.shape(box)
				.density(0f)
				.build(leftWallBody);

		FixtureBuilder.newFixture()
				.shape(box)
				.density(0f)
				.build(rightWallBody);

		box.dispose();
	}

	public class Builder {
		private float wallThickness;
		private float width;
		private float height;
		private final Vector2 position = new Vector2();

		private Builder() {

		}

		public Builder wallThickness(float wallThickness) {
			this.wallThickness = wallThickness;
			return this;
		}

		public Builder rotation(float rotation) {
			this.rotation = rotation;
			return this;
		}

		public Builder position(float px, float py) {
			this.position.x = px;
			this.position.y = py;
			return this;
		}

		public Builder size(float width, float height) {
			this.width = width;
			this.height = height;
			return this;
		}

		public Room build(GameWorld gameWorld) {
			return new Room(gameWorld, this);
		}
	}
}
