package com.turpgames.physics;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.turpgames.input.GdxInputManager;
import com.turpgames.physics.box2d.builders.Box2DBuilders;
import com.turpgames.physics.box2d.builders.RevoluteJointBuilder;
import com.turpgames.physics.box2d.builders.RopeJointBuilder;

public class PhysicsGame implements ApplicationListener {
	private GameWorld gameWorld;

	@Override
	public void create() {
		float width = Gdx.graphics.getWidth();
		float height = Gdx.graphics.getHeight();

		gameWorld = GameWorld.newBuilder().gravity(0, -10f).viewport(GameWorld.scale * width, GameWorld.scale * height).build();

		FixedPart fixedPart = new FixedPart(gameWorld);
		Ball ball = new Ball(gameWorld, 0.75f, 1.75f, 0.05f);

		new Ring(gameWorld, 0.75f, 0.75f, 0.1f, 0.2f);

		final float ringLength = 0.1f;
		final float y = 2.5f - 0.05f;

		RevoluteJointBuilder revoluteJointBuilder = Box2DBuilders.Joint.newRevoluteJointBuilder()
				.setLocalAnchorA(0, ringLength / 2f)
				.setLocalAnchorB(0, -ringLength / 2f);

		RopeJointBuilder ropeJointBuilder = Box2DBuilders.Joint.newRopeJointBuilder()
				.setMaxLength(ringLength)
				.setCollideConnected(true);

		Ring[] chain = new Ring[1];
		for (int i = 0; i < chain.length; i++) {
			chain[i] = new Ring(gameWorld, 0.75f, y - (i + 0.5f) * ringLength, 0.01f, ringLength);
			if (i > 0) {
				revoluteJointBuilder
						.setBodyA(chain[i - 1].body)
						.setBodyB(chain[i].body)
						.build(gameWorld.getWorld());
			}

//			 ropeJointBuilder
//			 .setBodyA(fixedPart.body)
//			 .setBodyB(chain[i].body)
//			 .build(gameWorld.getWorld());
		}

//		Box2DBuilders.Joint.newRopeJointBuilder()
//				.setBodyA(ball.body)
//				.setBodyB(fixedPart.body)
//				.setMaxLength(1.20f)
//				.setCollideConnected(true)
//				.build(gameWorld.getWorld());

//		Box2DBuilders.Joint.newRevoluteJointBuilder()
//				.setBodyA(ball.body)
//				.setBodyB(chain[0].body)
//				.setLocalAnchorA(0, ringLength / 2f)
//				.setLocalAnchorB(0, -ringLength / 2f)
//				.build(gameWorld.getWorld());

		Box2DBuilders.Joint.newRevoluteJointBuilder()
				.setBodyA(chain[chain.length - 1].body)
				.setBodyB(fixedPart.body)
				.setLocalAnchorA(0, ringLength / 2f)
				.setLocalAnchorB(0, -ringLength / 2f)
				.build(gameWorld.getWorld());
		//
		// ropeJointBuilder
		// .setBodyA(ball.body)
		// .setBodyB(chain[0].body)
		// .build(gameWorld.getWorld());
		//
		// ropeJointBuilder
		// .setBodyA(chain[chain.length - 1].body)
		// .setBodyB(fixedPart.body)
		// .build(gameWorld.getWorld());

		// RopeJoint2.build(gameWorld.getWorld(), ball.body, fixedPart.body,
		// ball.body.getPosition().x, ball.body.getPosition().y, 1f, 4);

		// Box2DBuilders.Joint.newRopeJointBuilder()
		// .setBodyA(fixedPart.body)
		// .setBodyB(ball.body)
		// .setLocalAnchorB(0f, 0.0f)
		// .setMaxLength(1.5f)
		// .build(gameWorld.getWorld());
		//
		// Box2DBuilders.Joint.newDistanceJointBuilder()
		// .setBodyA(fixedPart.body)
		// .setBodyB(ball.body)
		// .setLocalAnchorB(0f, 0.0f)
		// .setLength(1.5f)
		// .build(gameWorld.getWorld());

		// new Person(gameWorld);

		Room.newBuilder()
				.setPosition(0, 0)
				.setSize(gameWorld.getWidth(), gameWorld.getHeight())
				.setWallThickness(0.1f)
				.build(gameWorld);

		GdxInputManager.instance.activate();

		GdxInputManager.instance.registerListener(new MouseJointInputListener(gameWorld, fixedPart.body));
	}

	@Override
	public void render() {
		gameWorld.update();
		gameWorld.render();
	}

	@Override
	public void dispose() {
		gameWorld.dispose();
	}

	@Override
	public void resize(int width, int height) {
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}
}
